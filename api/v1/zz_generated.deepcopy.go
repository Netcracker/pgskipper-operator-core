//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package types

import (
	"k8s.io/api/core/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDaemon) DeepCopyInto(out *BackupDaemon) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	in.Affinity.DeepCopyInto(&out.Affinity)
	in.Storage.DeepCopyInto(&out.Storage)
	in.SecurityContext.DeepCopyInto(&out.SecurityContext)
	if in.S3Storage != nil {
		in, out := &in.S3Storage, &out.S3Storage
		*out = new(S3Storage)
		**out = **in
	}
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExternalPv != nil {
		in, out := &in.ExternalPv, &out.ExternalPv
		*out = new(ExternalPv)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDaemon.
func (in *BackupDaemon) DeepCopy() *BackupDaemon {
	if in == nil {
		return nil
	}
	out := new(BackupDaemon)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudSql) DeepCopyInto(out *CloudSql) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudSql.
func (in *CloudSql) DeepCopy() *CloudSql {
	if in == nil {
		return nil
	}
	out := new(CloudSql)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsulRegistration) DeepCopyInto(out *ConsulRegistration) {
	*out = *in
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LeaderMeta != nil {
		in, out := &in.LeaderMeta, &out.LeaderMeta
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LeaderTags != nil {
		in, out := &in.LeaderTags, &out.LeaderTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsulRegistration.
func (in *ConsulRegistration) DeepCopy() *ConsulRegistration {
	if in == nil {
		return nil
	}
	out := new(ConsulRegistration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DbEngine) DeepCopyInto(out *DbEngine) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DbEngine.
func (in *DbEngine) DeepCopy() *DbEngine {
	if in == nil {
		return nil
	}
	out := new(DbEngine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalPv) DeepCopyInto(out *ExternalPv) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalPv.
func (in *ExternalPv) DeepCopy() *ExternalPv {
	if in == nil {
		return nil
	}
	out := new(ExternalPv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricCollector) DeepCopyInto(out *MetricCollector) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	in.Affinity.DeepCopyInto(&out.Affinity)
	in.SecurityContext.DeepCopyInto(&out.SecurityContext)
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricCollector.
func (in *MetricCollector) DeepCopy() *MetricCollector {
	if in == nil {
		return nil
	}
	out := new(MetricCollector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Storage) DeepCopyInto(out *S3Storage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Storage.
func (in *S3Storage) DeepCopy() *S3Storage {
	if in == nil {
		return nil
	}
	out := new(S3Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Selectors != nil {
		in, out := &in.Selectors, &out.Selectors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AccessModes != nil {
		in, out := &in.AccessModes, &out.AccessModes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultRegistration) DeepCopyInto(out *VaultRegistration) {
	*out = *in
	out.DbEngine = in.DbEngine
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultRegistration.
func (in *VaultRegistration) DeepCopy() *VaultRegistration {
	if in == nil {
		return nil
	}
	out := new(VaultRegistration)
	in.DeepCopyInto(out)
	return out
}
